Defines a family of algorithms, encapsulate each one, and make them interchangable.
The Stratery pattern lets the algorithm vary independently from clients that use it.


When you want to define a class that will have one behavoiur that is similar to other behavoir

I want the class object to be able to choose from
Not Flying
Flying with Wings
Fly Super Fast

When you need to use on of the several behavoirs dynamically.

When to use the Strategy Pattern.
Often reduces long lists of conditionals
Avoid duplicate code
Keeps class changes from forcing other class changes
Can hide complicated/secret code from the user
Negativ e: Increased Number of Object/Classes


























